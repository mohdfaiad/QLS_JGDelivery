unit RemService_Impl;

{----------------------------------------------------------------------------}
{ This unit was automatically generated by the RemObjects SDK after reading  }
{ the RODL file associated with this project .                               }
{                                                                            }
{ This is where you are supposed to code the implementation of your objects. }
{----------------------------------------------------------------------------}

{$I RemObjects.inc}

interface

uses
  {vcl:} Classes, SysUtils,
  {RemObjects:} uROXMLIntf, uROClientIntf, uROTypes, uROServer, uROServerIntf, uROSessions,
  {Generated:} MyLibrary_Intf;

type
  { TRemService }
  TRemService = class(TRORemotable, IRemService)
  private
  protected
    { IRemService methods }
    function GetServerTime: DateTime;
    function DL2WRZSINFO(const BusinessType: Widestring; const XMLPrimaryKey: Widestring): Integer;
  end;

implementation

uses
  {Generated:} MyLibrary_Invk, UBusinessPacker, USysBusiness, UBusinessConst, fServerForm;

procedure Create_RemService(out anInstance : IUnknown);
begin
  anInstance := TRemService.Create;
end;

{ RemService }
function TRemService.GetServerTime: DateTime;
begin
  Result:=Now;
end;

function TRemService.DL2WRZSINFO(const BusinessType: Widestring; const XMLPrimaryKey: Widestring): Integer;
var
  nOut: TWorkerBusinessCommand;
begin
  try
    WriteLog(BusinessType);
    WriteLog(XMLPrimaryKey);
    try
      if not GetOnLineModel then
      begin
        ServerForm.ChkModel.Checked:=False;
        WriteLog('离线模式');
        Result:=3;
        Exit;
      end else
      begin
        ServerForm.ChkModel.Checked:=True;
        WriteLog('在线模式');
      end;
    except
      on e:Exception do
      begin
        WriteLog('获取模式：'+e.Message);
      end;
    end;
    if BusinessType='EDS_0001' then
    begin
      if GetAXSalesOrder(XMLPrimaryKey) then
        Result:=0
      else
        Result:=-1;
    end else
    if BusinessType='EDS_0002' then
    begin
      if GetAXSalesOrdLine(XMLPrimaryKey) then
        Result:=0
      else
        Result:=-1;
    end else
    if BusinessType='EDS_0003' then
    begin
      if GetAXSupAgreement(XMLPrimaryKey) then
        Result:=0
      else
        Result:=-1;
    end else
    if BusinessType='EDS_0004' then
    begin
      if GetAXCreLimCust(XMLPrimaryKey) then
        Result:=0
      else
        Result:=-1;
    end else
    if BusinessType='EDS_0005' then
    begin
      if GetAXCreLimCusCont(XMLPrimaryKey) then
        Result:=0
      else
        Result:=-1;
    end else
    if BusinessType='EDS_0008' then
    begin
      if GetAXSalesContract(XMLPrimaryKey) then
        Result:=0
      else
        Result:=-1;
    end else
    if BusinessType='EDS_0009' then
    begin
      if GetAXVehicleNo(XMLPrimaryKey) then
        Result:=0
      else
        Result:=-1;
    end else
    if BusinessType='EDS_0010' then
    begin
      if GetAXSalesContLine(XMLPrimaryKey) then
        Result:=0
      else
        Result:=-1;
    end else
    if BusinessType='EPS_0001' then
    begin
      if GetAXPurOrder(XMLPrimaryKey) then
        Result:=0
      else
        Result:=-1;
    end else
    if BusinessType='EPS_0002' then
    begin
      if GetAXPurOrdLine(XMLPrimaryKey) then
        Result:=0
      else
        Result:=-1;
    end else
    if BusinessType='EDP_0004' then
    begin
        Result:=0;
    end else
    if BusinessType='EDP_0005' then
    begin
        Result:=0;
    end else
    if BusinessType='EDB_0003' then
    begin
        Result:=0;
    end else
    if BusinessType='EDB_0004' then
    begin
        Result:=0;
    end else
    if BusinessType='EDB_0005' then
    begin
        Result:=0;
    end else
    if BusinessType='EDB_0006' then
    begin
      if GetAXCustomer(XMLPrimaryKey) then
        Result:=0
      else
        Result:=-1;
    end else
    if BusinessType='EDB_0007' then
    begin
      if GetAXProviders(XMLPrimaryKey) then
        Result:=0
      else
        Result:=-1;
    end else
    if BusinessType='EDB_0008' then
    begin
      if GetAXMaterails(XMLPrimaryKey) then
        Result:=0
      else
        Result:=-1;
    end else
    if BusinessType='EWS_0001' then
    begin
      if UpdateYKAmount(XMLPrimaryKey) then
        Result:=0
      else
        Result:=-1;
    end else
    if BusinessType='EDS_0011' then
    begin
      if GetThInfo(XMLPrimaryKey) then
        Result:=0
      else
        Result:=-1;
    end else
    if BusinessType='EPS_0003' then
    begin
      if GetPurchInfo(XMLPrimaryKey) then
        Result:=0
      else
        Result:=-1;
    end else
    begin
      Result:=3;
    end;
    case Result of
      0:WriteLog('成功');
      -1:WriteLog('失败');
      3:WriteLog('其他错误');
    end;
    {if BusinessType='EDS_0001' then
    begin
      if CallBusinessCommand(cBC_GetSalesOrder, XMLPrimaryKey, '', @nOut) then
        Result:=0
      else
        Result:=-1;
    end else
    if BusinessType='EDS_0002' then
    begin
      if CallBusinessCommand(cBC_GetSalesOrdLine, XMLPrimaryKey, '', @nOut) then
        Result:=0
      else
        Result:=-1;
    end else
    if BusinessType='EDS_0003' then
    begin
      if CallBusinessCommand(cBC_GetSupAgreement, XMLPrimaryKey, '', @nOut) then
        Result:=0
      else
        Result:=-1;
    end else
    if BusinessType='EDS_0004' then
    begin
      if CallBusinessCommand(cBC_GetCreLimCust, XMLPrimaryKey, '', @nOut) then
        Result:=0
      else
        Result:=-1;
    end else
    if BusinessType='EDS_0005' then
    begin
      if CallBusinessCommand(cBC_GetCreLimCusCont, XMLPrimaryKey, '', @nOut) then
        Result:=0
      else
        Result:=-1;
    end else
    if BusinessType='EDS_0008' then
    begin
      if CallBusinessCommand(cBC_GetSalesCont, XMLPrimaryKey, '', @nOut) then
        Result:=0
      else
        Result:=-1;
    end else
    if BusinessType='EDS_0009' then
    begin
      if CallBusinessCommand(cBC_GetVehicleNo, XMLPrimaryKey, '', @nOut) then
        Result:=0
      else
        Result:=-1;
    end else
    if BusinessType='EPS_0001' then
    begin
      if CallBusinessCommand(cBC_GetPurOrder, XMLPrimaryKey, '', @nOut) then
        Result:=0
      else
        Result:=-1;
    end else
    if BusinessType='EPS_0002' then
    begin
      if CallBusinessCommand(cBC_GetPurOrdLine, XMLPrimaryKey, '', @nOut) then
        Result:=0
      else
        Result:=-1;
    end else
    begin
      Result:=3;
    end;}
  except
    on e:exception do
    begin
      Result:=3;
      WriteLog('Error：'+e.Message);
    end;
  end;
end;

var
  fClassFactory: IROClassFactory;
initialization
  fClassFactory := TROClassFactory.Create('RemService', Create_RemService, TRemService_Invoker);
  // RegisterForZeroConf(fClassFactory,'_RemService_rosdk._tcp.');

finalization
  UnRegisterClassFactory(fClassFactory);
  fClassFactory := nil;

end.
